import { CLASSIC_MOD_ID } from "../constants/general";
import { getLSGameId } from "../dojo/utils/getLSGameId";
import { Plays } from "../enums/plays";
import { SortBy } from "../enums/sortBy";
import { IGameContext } from "./GameProvider";

export const gameProviderDefaults: IGameContext = {
  gameId: getLSGameId(),
  preSelectedPlay: Plays.NONE,
  points: 0,
  multi: 0,
  executeCreateGame: () => {},
  gameLoading: false,
  preSelectedCards: [],
  setPreSelectedCards: (_) => {},
  play: () => {},
  hand: [],
  setHand: (_) => {},
  getModifiers: (_) => {
    return [];
  },
  togglePreselected: (_) => {},
  discardAnimation: false,
  playAnimation: false,
  discard: () => {},
  changeModifierCard: () =>
    new Promise((resolve) => resolve({ success: false, cards: [] })),
  error: false,
  clearPreSelection: () => {},
  preSelectedModifiers: {},
  addModifier: (_, __) => {},
  roundRewards: undefined,
  sortBy: SortBy.RANK,
  toggleSortBy: () => {},
  onShopSkip: () => {},
  sellSpecialCard: () => new Promise((resolve) => resolve(false)),
  checkOrCreateGame: () => {},
  restartGame: () => {},
  preSelectionLocked: false,
  score: 0,
  playerScore: 0,
  lockRedirection: false,
  specialCards: [],
  playIsNeon: false,
  isRageRound: false,
  setIsRageRound: (_) => {},
  cash: 0,
  setLockedCash: (_) => {},
  rageCards: [],
  setRageCards: (_) => {},
  discards: 0,
  preSelectCard: (_) => {},
  unPreSelectCard: (_) => {},
  destroyedSpecialCardId: undefined,
  setDestroyedSpecialCardId: () => {},
  levelUpHand: undefined,
  setLevelUpHand: () => {},
  specialSwitcherOn: true,
  toggleSpecialSwitcher: () => {},
  showRages: () => {},
  showSpecials: () => {},
  powerUps: [],
  removePowerUp: (_) => {},
  preselectedPowerUps: [],
  setPreselectedPowerUps: (_) => {},
  togglePreselectedPowerUp: (_) => {},
  powerUpIsPreselected: (_) => false,
  setPowerUps: (_) => {},
  addPowerUp: (_) => {},
  modId: CLASSIC_MOD_ID,
  setModId: (_) => {},
  maxSpecialCards: 7,
  maxPowerUpSlots: 4,
  isClassic: true,
};
