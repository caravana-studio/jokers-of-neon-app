/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Card: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, suit: RecsType.Number, value: RecsType.Number, points: RecsType.Number, multi_add: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-Card",
            types: ["u32","enum","enum","u32","u32"],
            customTypes: ["Suit","Value"],
          },
        }
      );
    })(),
    CardItem: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, item_type: RecsType.String, card_id: RecsType.Number, cost: RecsType.Number, purchased: RecsType.Boolean, temporary: RecsType.Boolean },
        {
          metadata: {
            name: "jokers_of_neon-CardItem",
            types: ["u32","u32","enum","u32","u32","bool","bool"],
            customTypes: ["CardItemType"],
          },
        }
      );
    })(),
    CardScoreEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, index: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-CardScoreEvent",
            types: ["contractaddress","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    ConfigEarningCash: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, base: RecsType.Number, config_hands_played: RecsType.Number, config_remaining_discards: RecsType.Number, config_extra_points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-ConfigEarningCash",
            types: ["u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CreateGameEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-CreateGameEvent",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CurrentHandCard: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, type_player_card: RecsType.Number, player_card_id: RecsType.Number, card_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-CurrentHandCard",
            types: ["u32","u32","enum","u32","u32"],
            customTypes: ["TypePlayerCard"],
          },
        }
      );
    })(),
    CurrentSpecialCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, effect_card_id: RecsType.Number, is_temporary: RecsType.Boolean, remaining: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-CurrentSpecialCards",
            types: ["u32","u32","u32","bool","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    DeckCard: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, type_player_card: RecsType.Number, player_card_id: RecsType.Number, card_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-DeckCard",
            types: ["u32","u32","enum","u32","u32"],
            customTypes: ["TypePlayerCard"],
          },
        }
      );
    })(),
    DetailEarnedEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, round_defeat: RecsType.Number, level_bonus: RecsType.Number, hands_left: RecsType.Number, hands_left_cash: RecsType.Number, discard_left: RecsType.Number, discard_left_cash: RecsType.Number, total: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-DetailEarnedEvent",
            types: ["contractaddress","u32","u32","u32","u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Effect: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, multi_add: RecsType.Number, multi_multi: RecsType.Number, points: RecsType.Number, poker_hand: RecsType.Number, suit: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-Effect",
            types: ["u32","u32","u32","u32","enum","enum"],
            customTypes: ["PokerHand","Suit"],
          },
        }
      );
    })(),
    EffectCard: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, effect_id: RecsType.Number, price: RecsType.Number, probability: RecsType.Number, type_effect_card: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-EffectCard",
            types: ["u32","u32","u32","u32","enum"],
            customTypes: ["TypeEffectCard"],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, owner: RecsType.BigInt, player_name: RecsType.BigInt, max_hands: RecsType.Number, max_discard: RecsType.Number, round: RecsType.Number, player_score: RecsType.Number, level: RecsType.Number, len_hand: RecsType.Number, len_common_cards: RecsType.Number, len_effect_cards: RecsType.Number, len_max_current_special_cards: RecsType.Number, len_current_special_cards: RecsType.Number, state: RecsType.String, cash: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-Game",
            types: ["u32","contractaddress","felt252","u8","u8","u8","u32","u32","u32","u32","u32","u32","u32","enum","u32"],
            customTypes: ["GameState"],
          },
        }
      );
    })(),
    LevelPokerHand: (() => {
      return defineComponent(
        world,
        { poker_hand: RecsType.Number, level: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-LevelPokerHand",
            types: ["enum","u8","u32","u32"],
            customTypes: ["PokerHand"],
          },
        }
      );
    })(),
    ModifierCardSuitEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, modifier_card_idx: RecsType.Number, current_hand_card_idx: RecsType.Number, suit: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-ModifierCardSuitEvent",
            types: ["contractaddress","u32","u32","u32","enum"],
            customTypes: ["Suit"],
          },
        }
      );
    })(),
    PlayGameOverEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PlayGameOverEvent",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayWinGameEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, level: RecsType.Number, player_score: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PlayWinGameEvent",
            types: ["contractaddress","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerCommonCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, common_card_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PlayerCommonCards",
            types: ["u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerEffectCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, effect_card_id: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PlayerEffectCards",
            types: ["u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerLevelPokerHand: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, poker_hand: RecsType.Number, level: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PlayerLevelPokerHand",
            types: ["u32","enum","u8","u32","u32"],
            customTypes: ["PokerHand"],
          },
        }
      );
    })(),
    PokerHandEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, poker_hand: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-PokerHandEvent",
            types: ["contractaddress","u8","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    PokerHandItem: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, poker_hand: RecsType.String, level: RecsType.Number, cost: RecsType.Number, purchased: RecsType.Boolean },
        {
          metadata: {
            name: "jokers_of_neon-PokerHandItem",
            types: ["u32","u32","enum","u8","u32","bool"],
            customTypes: ["PokerHand"],
          },
        }
      );
    })(),
    Round: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_score: RecsType.Number, level_score: RecsType.Number, hands: RecsType.Number, discard: RecsType.Number, current_len_deck: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-Round",
            types: ["u32","u32","u32","u8","u8","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    RoundScoreEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, player_score: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-RoundScoreEvent",
            types: ["contractaddress","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Shop: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, reroll_cost: RecsType.Number, reroll_executed: RecsType.Boolean, len_item_common_cards: RecsType.Number, len_item_modifier_cards: RecsType.Number, len_item_special_cards: RecsType.Number, len_item_poker_hands: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-Shop",
            types: ["u32","u32","bool","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    SpecialModifierMultiEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, current_special_card_idx: RecsType.Number, current_hand_card_idx: RecsType.Number, multi: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-SpecialModifierMultiEvent",
            types: ["contractaddress","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    SpecialModifierPointsEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, current_special_card_idx: RecsType.Number, current_hand_card_idx: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-SpecialModifierPointsEvent",
            types: ["contractaddress","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    SpecialModifierSuitEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, current_special_card_idx: RecsType.Number, current_hand_card_idx: RecsType.Number, suit: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-SpecialModifierSuitEvent",
            types: ["contractaddress","u32","u32","u32","enum"],
            customTypes: ["Suit"],
          },
        }
      );
    })(),
    SpecialPokerHandEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number, current_special_card_idx: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "jokers_of_neon-SpecialPokerHandEvent",
            types: ["contractaddress","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
