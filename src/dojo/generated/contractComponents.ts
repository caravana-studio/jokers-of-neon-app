/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Card: (() => {
      return defineComponent(
        world,
        { value: RecsType.Number, suit: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "Card",
            types: ["enum","enum","u8"],
            customTypes: ["Value","Suit"],
          },
        }
      );
    })(),
    PokerHandEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, poker_hand: RecsType.Number },
        {
          metadata: {
            name: "PokerHandEvent",
            types: ["contractaddress","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, owner: RecsType.BigInt, max_hands: RecsType.Number, max_discard: RecsType.Number, round: RecsType.Number, score: RecsType.BigInt, current_len_hand: RecsType.Number, current_len_special_cards: RecsType.Number, game_over: RecsType.Boolean },
        {
          metadata: {
            name: "Game",
            types: ["u32","contractaddress","u8","u8","u8","u128","u8","u8","bool"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
