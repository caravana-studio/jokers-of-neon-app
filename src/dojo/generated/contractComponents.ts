/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Card: (() => {
      return defineComponent(
        world,
        { value: RecsType.Number, suit: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "Card",
            types: ["enum","enum","u8"],
            customTypes: ["Value","Suit"],
          },
        }
      );
    })(),
    CardScoreEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, index: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "CardScoreEvent",
            types: ["contractaddress","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CreateGameEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, game_id: RecsType.Number },
        {
          metadata: {
            name: "CreateGameEvent",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    LevelPokerHand: (() => {
      return defineComponent(
        world,
        { poker_hand: RecsType.Number, level: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "LevelPokerHand",
            types: ["enum","u8","u32","u32"],
            customTypes: ["PokerHand"],
          },
        }
      );
    })(),
    PokerHandEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, poker_hand: RecsType.Number, multi: RecsType.Number, points: RecsType.Number },
        {
          metadata: {
            name: "PokerHandEvent",
            types: ["contractaddress","u8","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CurrentHandCard: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, type_card: RecsType.String, card_id: RecsType.Number, value: RecsType.String, suit: RecsType.String },
        {
          metadata: {
            name: "CurrentHandCard",
            types: ["u32","u32","enum","u8","enum","enum"],
            customTypes: ["TypeCard","Value","Suit"],
          },
        }
      );
    })(),
    DeckCard: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, idx: RecsType.Number, type_card: RecsType.Number, card_id: RecsType.Number, value: RecsType.Number, suit: RecsType.Number },
        {
          metadata: {
            name: "DeckCard",
            types: ["u32","u32","enum","u8","enum","enum"],
            customTypes: ["TypeCard","Value","Suit"],
          },
        }
      );
    })(),
    CurrentSpecialCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, id: RecsType.BigInt, name: RecsType.BigInt },
        {
          metadata: {
            name: "CurrentSpecialCards",
            types: ["u32","felt252","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, owner: RecsType.BigInt, max_hands: RecsType.Number, max_discard: RecsType.Number, round: RecsType.Number, score: RecsType.Number, current_len_hand: RecsType.Number, current_len_special_cards: RecsType.Number, game_over: RecsType.Boolean },
        {
          metadata: {
            name: "Game",
            types: ["u32","contractaddress","u8","u8","u8","u32","u32","u32","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerCommonCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, value: RecsType.Number, suit: RecsType.Number, count: RecsType.Number },
        {
          metadata: {
            name: "PlayerCommonCards",
            types: ["u32","enum","enum","u8"],
            customTypes: ["Value","Suit"],
          },
        }
      );
    })(),
    PlayerModifierCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, id: RecsType.BigInt, name: RecsType.BigInt },
        {
          metadata: {
            name: "PlayerModifierCards",
            types: ["u32","felt252","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerSpecialCards: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, id: RecsType.BigInt, name: RecsType.BigInt },
        {
          metadata: {
            name: "PlayerSpecialCards",
            types: ["u32","felt252","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Round: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, score: RecsType.Number, hands: RecsType.Number, discard: RecsType.Number, current_len_deck: RecsType.Number },
        {
          metadata: {
            name: "Round",
            types: ["u32","u32","u8","u8","u32"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
